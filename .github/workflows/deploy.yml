name: Deploy be-EasyDine Backend to Ubuntu Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: arisdev2k2/backend-easydine:latest

      - name: Debug Secrets
        run: |
          echo "PORT is set: ${{ secrets.PORT != '' }}"
          echo "END_TIME_OFFSET_MINUTES is set: ${{ secrets.END_TIME_OFFSET_MINUTES != '' }}"
          echo "EMAIL_USER is set: ${{ secrets.EMAIL_USER != '' }}"
          echo "GOOGLE_CLIENT_ID is set: ${{ secrets.GOOGLE_CLIENT_ID != '' }}"
          echo "GOOGLE_CALLBACK_URL is set: ${{ secrets.GOOGLE_CALLBACK_URL != '' }}"
          echo "SERVER_IP is set: ${{ secrets.SERVER_IP != '' }}"
          echo "SERVER_USER is set: ${{ secrets.SERVER_USER != '' }}"

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        env:
          PORT: ${{ secrets.PORT }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
          ACCESS_TOKEN_LIFE: ${{ secrets.ACCESS_TOKEN_LIFE }}
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
          REFRESH_TOKEN_LIFE: ${{ secrets.REFRESH_TOKEN_LIFE }}
          REFRESH_TOKEN_SIZE: ${{ secrets.REFRESH_TOKEN_SIZE }}
          END_TIME_OFFSET_MINUTES: ${{ secrets.END_TIME_OFFSET_MINUTES }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ${{ secrets.SERVER_USER }}
            fi
            if ! command -v docker-compose &> /dev/null; then
              sudo apt install -y docker-compose
            fi

            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

            if ! docker network ls | grep -q mongo_app-network; then
              docker network create mongo_app-network
            fi

            cd /home/aris/backend-easydine
            git pull origin main
            docker pull arisdev2k2/backend-easydine:latest
            docker-compose down

            PORT="$PORT" \
            MONGO_URI="$MONGO_URI" \
            ACCESS_TOKEN_SECRET="$ACCESS_TOKEN_SECRET" \
            ACCESS_TOKEN_LIFE="$ACCESS_TOKEN_LIFE" \
            REFRESH_TOKEN_SECRET="$REFRESH_TOKEN_SECRET" \
            REFRESH_TOKEN_LIFE="$REFRESH_TOKEN_LIFE" \
            REFRESH_TOKEN_SIZE="$REFRESH_TOKEN_SIZE" \
            END_TIME_OFFSET_MINUTES="$END_TIME_OFFSET_MINUTES" \
            EMAIL_USER="$EMAIL_USER" \
            EMAIL_PASS="$EMAIL_PASS" \
            GOOGLE_CLIENT_ID="$GOOGLE_CLIENT_ID" \
            GOOGLE_CLIENT_SECRET="$GOOGLE_CLIENT_SECRET" \
            GOOGLE_CALLBACK_URL="$GOOGLE_CALLBACK_URL" \
            SESSION_SECRET="$SESSION_SECRET" \
            docker-compose up -d

            docker image prune -f

      - name: Check Server Health
        run: |
          sleep 30
          curl -f https://vuvanthang.website || exit 1
